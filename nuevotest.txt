
vanes@VANESSALAPTOP MINGW64 ~/Desktop/GithubTest/test (main)
$ git add .

vanes@VANESSALAPTOP MINGW64 ~/Desktop/GithubTest/test (main)
$ git commit -m "Estoy subiendo un archivo test"
Author identity unknown

*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: unable to auto-detect email address (got 'vanes@VANESSALAPTOP.(none)')

vanes@VANESSALAPTOP MINGW64 ~/Desktop/GithubTest/test (main)
$ git config --global user.email "fernandofersaca@hotmail.com"

vanes@VANESSALAPTOP MINGW64 ~/Desktop/GithubTest/test (main)
$ git commit -m "Estoy subiendo un archivo test"
[main (root-commit) 2138426] Estoy subiendo un archivo test
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 test.txt

vanes@VANESSALAPTOP MINGW64 ~/Desktop/GithubTest/test (main)
$ git push
info: please complete authentication in your browser...
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Writing objects: 100% (3/3), 233 bytes | 233.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/fersaca/test.git
 * [new branch]      main -> main

vanes@VANESSALAPTOP MINGW64 ~/Desktop/GithubTest/test (main)
$ git add .

vanes@VANESSALAPTOP MINGW64 ~/Desktop/GithubTest/test (main)
$ git commit -m "Adicione los pasos de github dentro del test para tener los comandos"
[main 24a6444] Adicione los pasos de github dentro del test para tener los comandos
 1 file changed, 16 insertions(+)

vanes@VANESSALAPTOP MINGW64 ~/Desktop/GithubTest/test (main)
$ git push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 544 bytes | 544.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/fersaca/test.git
   2138426..24a6444  main -> main

vanes@VANESSALAPTOP MINGW64 ~/Desktop/GithubTest/test (main)
$ git pull
Already up to date.

vanes@VANESSALAPTOP MINGW64 ~/Desktop/GithubTest/test (main)
$  git branch -b Pureba1
error: unknown switch `b'
usage: git branch [<options>] [-r | -a] [--merged] [--no-merged]
   or: git branch [<options>] [-f] [--recurse-submodules] <branch-name> [<start-point>]
   or: git branch [<options>] [-l] [<pattern>...]
   or: git branch [<options>] [-r] (-d | -D) <branch-name>...
   or: git branch [<options>] (-m | -M) [<old-branch>] <new-branch>
   or: git branch [<options>] (-c | -C) [<old-branch>] <new-branch>
   or: git branch [<options>] [-r | -a] [--points-at]
   or: git branch [<options>] [-r | -a] [--format]

Generic options
    -v, --verbose         show hash and subject, give twice for upstream branch
    -q, --quiet           suppress informational messages
    -t, --track[=(direct|inherit)]
                          set branch tracking configuration
    -u, --set-upstream-to <upstream>
                          change the upstream info
    --unset-upstream      unset the upstream info
    --color[=<when>]      use colored output
    -r, --remotes         act on remote-tracking branches
    --contains <commit>   print only branches that contain the commit
    --no-contains <commit>
                          print only branches that don't contain the commit
    --abbrev[=<n>]        use <n> digits to display object names

Specific git-branch actions:
    -a, --all             list both remote-tracking and local branches
    -d, --delete          delete fully merged branch
    -D                    delete branch (even if not merged)
    -m, --move            move/rename a branch and its reflog
    -M                    move/rename a branch, even if target exists
    --omit-empty          do not output a newline after empty formatted refs
    -c, --copy            copy a branch and its reflog
    -C                    copy a branch, even if target exists
    -l, --list            list branch names
    --show-current        show current branch name
    --create-reflog       create the branch's reflog
    --edit-description    edit the description for the branch
    -f, --force           force creation, move/rename, deletion
    --merged <commit>     print only branches that are merged
    --no-merged <commit>  print only branches that are not merged
    --column[=<style>]    list branches in columns
    --sort <key>          field name to sort on
    --points-at <object>  print only branches of the object
    -i, --ignore-case     sorting and filtering are case insensitive
    --recurse-submodules  recurse through submodules
    --format <format>     format to use for the output


vanes@VANESSALAPTOP MINGW64 ~/Desktop/GithubTest/test (main)
$ git branch ramatest1

vanes@VANESSALAPTOP MINGW64 ~/Desktop/GithubTest/test (main)
$ git checkout ramatest1
Switched to branch 'ramatest1'

vanes@VANESSALAPTOP MINGW64 ~/Desktop/GithubTest/test (ramatest1)
$ git checkout main
Switched to branch 'main'
Your branch is up to date with 'origin/main'.

vanes@VANESSALAPTOP MINGW64 ~/Desktop/GithubTest/test (main)
$ git checkout ramatest1
Switched to branch 'ramatest1'

vanes@VANESSALAPTOP MINGW64 ~/Desktop/GithubTest/test (ramatest1)
$ git add .

vanes@VANESSALAPTOP MINGW64 ~/Desktop/GithubTest/test (ramatest1)
$ git commit -m "Agregue nuevo archivo llamado nuevotest"
[ramatest1 73fc868] Agregue nuevo archivo llamado nuevotest
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 nuevotest.txt

vanes@VANESSALAPTOP MINGW64 ~/Desktop/GithubTest/test (ramatest1)
$ git push origin ramatet1
error: src refspec ramatet1 does not match any
error: failed to push some refs to 'https://github.com/fersaca/test.git'

vanes@VANESSALAPTOP MINGW64 ~/Desktop/GithubTest/test (ramatest1)
$ git push origin ramatest1
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 300 bytes | 300.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
remote:
remote: Create a pull request for 'ramatest1' on GitHub by visiting:
remote:      https://github.com/fersaca/test/pull/new/ramatest1
remote:
To https://github.com/fersaca/test.git
 * [new branch]      ramatest1 -> ramatest1

vanes@VANESSALAPTOP MINGW64 ~/Desktop/GithubTest/test (ramatest1)
$ git checkout main
Switched to branch 'main'
Your branch is up to date with 'origin/main'.

vanes@VANESSALAPTOP MINGW64 ~/Desktop/GithubTest/test (main)
$ git pull origin ramatest1
From https://github.com/fersaca/test
 * branch            ramatest1  -> FETCH_HEAD
Updating 24a6444..73fc868
Fast-forward
 nuevotest.txt | 0
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 nuevotest.txt

vanes@VANESSALAPTOP MINGW64 ~/Desktop/GithubTest/test (main)
